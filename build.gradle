plugins {
    id 'java-library'
    id 'maven-publish'
    id 'eclipse'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.8'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = rootProject.maven_group
version = rootProject.release_version
base.archivesName = project.archives_base_name

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://jitpack.io/'
    }
}

dependencies {
    annotationProcessor(compileOnly("org.projectlombok:lombok:1.18.34"))
    compileOnly("com.velocitypowered:velocity-api:3.3.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.3.0-SNAPSHOT")

    implementation "com.moandjiezana.toml:toml4j:0.7.2"
    implementation("com.github.TCBuildMC.SimpleTools:Config:dc6c382cc1") {
        transitive false
    }

    implementation("com.github.TCBuildMC.SimpleTools:I18n:dc6c382cc1") {
        transitive false
    }

    implementation("com.github.TCBuildMC.SimpleTools:Utilities:dc6c382cc1") {
        transitive false
    }

    implementation "commons-io:commons-io:2.16.1"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(17)
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

project.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)

jar {
    archiveClassifier.set "dev"

    manifest {
        attributes "Implementation-Version": project.version
    }
}

compileJava.dependsOn clean

shadowJar {
    archiveClassifier.set null

    def reloc = {String from, String to ->
        relocate from, to
    }

    reloc "com.moandjiezana.toml", "xyz.tcbuildmc.minecraft.plugin.velocityHub.lib.toml4j"
    reloc "com.apache.commons.io", "xyz.tcbuildmc.minecraft.plugin.velocityHub.lib.commonsio"

    exclude "com/google/gson/**"
}

assemble.dependsOn shadowJar

publishing {
    publications {
        create("MavenJava", MavenPublication) {
            from components.java
            artifactId = project.archives_base_name
        }
    }

    repositories {
        mavenLocal()
    }
}
